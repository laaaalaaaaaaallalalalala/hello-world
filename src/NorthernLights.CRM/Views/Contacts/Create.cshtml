@{
    ViewBag.Title = "Contact";
}

<h2>@ViewBag.Title</h2>

<hr />

<form id="formPersonDetails" class="form-horizontal">
    <div class="form-group">
        @Html.Label("FirstName", "First Name", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBox("FirstName", "", new { @class = "form-control" })
        </div>
        @Html.Label("Title", "Title", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBox("Title", "", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("LastName", "Last Name", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBox("LastName", "", new { @class = "form-control" })
        </div>
        @Html.Label("AccountId", "Account", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.DropDownList("AccountId", new List<SelectListItem>(), new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Alias", "Alias", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBox("Alias", "", new { @class = "form-control" })
        </div>
        @Html.Label("Birthday", "Birthday", new { @class = "col-md-2 control-label" })
        <div class="col-md-4" style="z-index: 1030;">
            <div class="input-group date">
                @Html.TextBox("Birthday", "", new { @class = "form-control" })
                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Email", "Email", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBox("Email", "", new { @class = "form-control", @type = "email" })
        </div>
        @Html.Label("Mobile", "Mobile", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @Html.TextBox("Mobile", "", new { @class = "form-control", @type = "tel" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Gender", "Gender", new { @class = "col-md-2 control-label" })
        <div class="col-md-4">
            @foreach (var pair in ViewBag.Gender)
            {
                <div class="radio">
                    <label>
                        @Html.RadioButton("Gender", (string)pair.Name)
                        @pair.Description
                    </label>
                </div>
            }
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-12 text-right">
            <button class="btn btn-primary" type="submit">Save</button>
        </div>
    </div>
</form>

@section Scripts {
    <script>
        $(document).on('ready', function () {
            $.get('/api/Rest/GetAccounts', function (data) {
                data.splice(0, 0, { Id: "", Name: "" });
                $("#AccountId").select2({
                    placeholder: "- Select -",
                    allowClear: true,
                    data: $.map(data, function (item, index) {
                        item.id = item.Id;
                        item.text = item.Name;
                        return item;
                    }),
                    templateResult: function (item) {
                        return '<div>' + '<img src="' + (item.Logo !== null ? item.Logo : '/Images/no-image.png') + '" height="64px" width="64px"/>&nbsp;' + item.Name + '</div>';
                    },
                    escapeMarkup: function (markup) { return markup; },
                });
            });

            $('#formPersonDetails').bootstrapValidator({
                message: 'This value is not valid',
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    FirstName: {
                        message: 'First Name is invalid.',
                        validators: {
                            notEmpty: { message: 'Required' }
                        }
                    },
                    LastName: {
                        message: 'Last Name is invalid.',
                        validators: {
                            notEmpty: { message: 'Required' }
                        }
                    },
                    Email: {
                        message: 'Email is invalid.',
                        validators: {
                            notEmpty: { message: 'Required' }
                        }
                    },
                    Gender: {
                        message: 'Gender is invalid.',
                        validators: {
                            notEmpty: { message: 'Required' }
                        }
                    }
                }
            });
        });

        $('#formPersonDetails').on('success.form.bv', function (e) {
            e.preventDefault();

            $.post('/api/Rest/AddContact', {
                "FirstName": $('#FirstName').val(),
                "Title": $('#Title').val(),
                "LastName": $('#LastName').val(),
                "AccountId": $('#AccountId').val(),
                "Alias": $('#Alias').val(),
                "Email": $('#Email').val(),
                "Birthday": $('#Birthday').val(),
                "Mobile": $('#Mobile').val(),
                "Gender": $('#Gender:checked').val(),
            }, function (data) {
                $.notify({ message: 'Data Saved.' }, { type: 'success', placement: { from: 'top', align: 'center' } });
                window.location = '/Contacts/Edit/' + data.Id;
            });
        });
    </script>
}